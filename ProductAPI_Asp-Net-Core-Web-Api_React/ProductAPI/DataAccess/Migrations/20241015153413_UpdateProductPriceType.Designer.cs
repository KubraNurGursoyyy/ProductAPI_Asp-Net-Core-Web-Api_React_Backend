// <auto-generated />
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241015153413_UpdateProductPriceType")]
    partial class UpdateProductPriceType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.CategoryEntities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Tech"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Accessories"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Mobile"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Game & Consoles"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.ProductEntities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            Name = "Computer",
                            Price = 999.00m
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            Name = "Tablet",
                            Price = 442.00m
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 2,
                            Name = "Fan",
                            Price = 29.94m
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 2,
                            Name = "Headphone",
                            Price = 99.45m
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 3,
                            Name = "Telephone",
                            Price = 199.19m
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 3,
                            Name = "Powerbank",
                            Price = 49.86m
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 4,
                            Name = "PS5",
                            Price = 499.45m
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 4,
                            Name = "Tomb Raider",
                            Price = 59.12m
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.ProductEntities", b =>
                {
                    b.HasOne("DataAccess.Entities.CategoryEntities", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataAccess.Entities.CategoryEntities", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
